#include "CUDA2HIP.h"

#include "llvm/ADT/StringRef.h"
#include <map>
#include <stdio.h>
#include <string>
#include <iostream>
#include <vector>

// generated by hipify-function-help
std::map<std::string, std::pair<std::vector<std::string>, std::pair<int, int>>> name_to_args = {
{"cuArray3DCreate_v2", {{"CUarray *", "const CUDA_ARRAY3D_DESCRIPTOR *", }, {2, 2}}},
{"cuArray3DGetDescriptor_v2", {{"CUDA_ARRAY3D_DESCRIPTOR *", "CUarray", }, {2, 2}}},
{"cuArrayCreate_v2", {{"CUarray *", "const CUDA_ARRAY_DESCRIPTOR *", }, {2, 2}}},
{"cuArrayDestroy", {{"CUarray", }, {1, 1}}},
{"cuArrayGetDescriptor_v2", {{"CUDA_ARRAY_DESCRIPTOR *", "CUarray", }, {2, 2}}},
{"cuCtxCreate_v2", {{"CUcontext *", "unsigned int", "CUdevice", }, {3, 3}}},
{"cuCtxDestroy_v2", {{"CUcontext", }, {1, 1}}},
{"cuCtxDisablePeerAccess", {{"CUcontext", }, {1, 1}}},
{"cuCtxEnablePeerAccess", {{"CUcontext", "unsigned int", }, {2, 2}}},
{"cuCtxGetApiVersion", {{"CUcontext", "unsigned int *", }, {2, 2}}},
{"cuCtxGetCacheConfig", {{"CUfunc_cache *", }, {1, 1}}},
{"cuCtxGetCurrent", {{"CUcontext *", }, {1, 1}}},
{"cuCtxGetDevice", {{"CUdevice *", }, {1, 1}}},
{"cuCtxGetFlags", {{"unsigned int *", }, {1, 1}}},
{"cuCtxGetLimit", {{"int *", "CUlimit", }, {2, 2}}},
{"cuCtxGetSharedMemConfig", {{"CUsharedconfig *", }, {1, 1}}},
{"cuCtxGetStreamPriorityRange", {{"int *", "int *", }, {2, 2}}},
{"cuCtxPopCurrent_v2", {{"CUcontext *", }, {1, 1}}},
{"cuCtxPushCurrent_v2", {{"CUcontext", }, {1, 1}}},
{"cuCtxSetCacheConfig", {{"CUfunc_cache", }, {1, 1}}},
{"cuCtxSetCurrent", {{"CUcontext", }, {1, 1}}},
{"cuCtxSetLimit", {{"CUlimit", "int", }, {2, 2}}},
{"cuCtxSetSharedMemConfig", {{"CUsharedconfig", }, {1, 1}}},
{"cuCtxSynchronize", {{}, {0, 0}}},
{"cuDestroyExternalMemory", {{"CUexternalMemory", }, {1, 1}}},
{"cuDestroyExternalSemaphore", {{"CUexternalSemaphore", }, {1, 1}}},
{"cuDeviceCanAccessPeer", {{"int *", "CUdevice", "CUdevice", }, {3, 3}}},
{"cuDeviceGet", {{"CUdevice *", "int", }, {2, 2}}},
{"cuDeviceGetAttribute", {{"int *", "CUdevice_attribute", "CUdevice", }, {3, 3}}},
{"cuDeviceGetByPCIBusId", {{"CUdevice *", "const char *", }, {2, 2}}},
{"cuDeviceGetCount", {{"int *", }, {1, 1}}},
{"cuDeviceGetName", {{"char *", "int", "CUdevice", }, {3, 3}}},
{"cuDeviceGetP2PAttribute", {{"int *", "CUdevice_P2PAttribute", "CUdevice", "CUdevice", }, {4, 4}}},
{"cuDeviceGetPCIBusId", {{"char *", "int", "CUdevice", }, {3, 3}}},
{"cuDeviceGetUuid", {{"CUuuid *", "CUdevice", }, {2, 2}}},
{"cuDevicePrimaryCtxGetState", {{"CUdevice", "unsigned int *", "int *", }, {3, 3}}},
{"cuDevicePrimaryCtxRelease", {{"CUdevice", }, {1, 1}}},
{"cuDevicePrimaryCtxReset", {{"CUdevice", }, {1, 1}}},
{"cuDevicePrimaryCtxRetain", {{"CUcontext *", "CUdevice", }, {2, 2}}},
{"cuDevicePrimaryCtxSetFlags", {{"CUdevice", "unsigned int", }, {2, 2}}},
{"cuDeviceTotalMem_v2", {{"int *", "CUdevice", }, {2, 2}}},
{"cuDriverGetVersion", {{"int *", }, {1, 1}}},
{"cuEventCreate", {{"CUevent *", "unsigned int", }, {2, 2}}},
{"cuEventDestroy_v2", {{"CUevent", }, {1, 1}}},
{"cuEventElapsedTime", {{"float *", "CUevent", "CUevent", }, {3, 3}}},
{"cuEventQuery", {{"CUevent", }, {1, 1}}},
{"cuEventRecord", {{"CUevent", "CUstream", }, {2, 2}}},
{"cuEventSynchronize", {{"CUevent", }, {1, 1}}},
{"cuExternalMemoryGetMappedBuffer", {{"CUdeviceptr *", "CUexternalMemory", "const CUDA_EXTERNAL_MEMORY_BUFFER_DESC *", }, {3, 3}}},
{"cuExternalMemoryGetMappedMipmappedArray", {{"CUmipmappedArray *", "CUexternalMemory", "const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC *", }, {3, 3}}},
{"cuFuncGetAttribute", {{"int *", "CUfunction_attribute", "CUfunction", }, {3, 3}}},
{"cuFuncSetAttribute", {{"CUfunction", "CUfunction_attribute", "int", }, {3, 3}}},
{"cuFuncSetCacheConfig", {{"CUfunction", "CUfunc_cache", }, {2, 2}}},
{"cuFuncSetSharedMemConfig", {{"CUfunction", "CUsharedconfig", }, {2, 2}}},
{"cuGetErrorName", {{"CUresult", "const char **", }, {2, 2}}},
{"cuGetErrorString", {{"CUresult", "const char **", }, {2, 2}}},
{"cuGetExportTable", {{"const void **", "const CUuuid *", }, {2, 2}}},
{"cuGraphAddChildGraphNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", "CUgraph", }, {5, 5}}},
{"cuGraphAddDependencies", {{"CUgraph", "const CUgraphNode *", "const CUgraphNode *", "int", }, {4, 4}}},
{"cuGraphAddEmptyNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", }, {4, 4}}},
{"cuGraphAddHostNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", "const CUDA_HOST_NODE_PARAMS *", }, {5, 5}}},
{"cuGraphAddKernelNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", "const CUDA_KERNEL_NODE_PARAMS *", }, {5, 5}}},
{"cuGraphAddMemcpyNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", "const CUDA_MEMCPY3D *", "CUcontext", }, {6, 6}}},
{"cuGraphAddMemsetNode", {{"CUgraphNode *", "CUgraph", "const CUgraphNode *", "int", "const CUDA_MEMSET_NODE_PARAMS *", "CUcontext", }, {6, 6}}},
{"cuGraphChildGraphNodeGetGraph", {{"CUgraphNode", "CUgraph *", }, {2, 2}}},
{"cuGraphClone", {{"CUgraph *", "CUgraph", }, {2, 2}}},
{"cuGraphCreate", {{"CUgraph *", "unsigned int", }, {2, 2}}},
{"cuGraphDestroy", {{"CUgraph", }, {1, 1}}},
{"cuGraphDestroyNode", {{"CUgraphNode", }, {1, 1}}},
{"cuGraphExecDestroy", {{"CUgraphExec", }, {1, 1}}},
{"cuGraphExecKernelNodeSetParams", {{"CUgraphExec", "CUgraphNode", "const CUDA_KERNEL_NODE_PARAMS *", }, {3, 3}}},
{"cuGraphGetEdges", {{"CUgraph", "CUgraphNode *", "CUgraphNode *", "int *", }, {4, 4}}},
{"cuGraphGetNodes", {{"CUgraph", "CUgraphNode *", "int *", }, {3, 3}}},
{"cuGraphGetRootNodes", {{"CUgraph", "CUgraphNode *", "int *", }, {3, 3}}},
{"cuGraphHostNodeGetParams", {{"CUgraphNode", "CUDA_HOST_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphHostNodeSetParams", {{"CUgraphNode", "const CUDA_HOST_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphInstantiate", {{"CUgraphExec *", "CUgraph", "CUgraphNode *", "char *", "int", }, {5, 5}}},
{"cuGraphKernelNodeGetParams", {{"CUgraphNode", "CUDA_KERNEL_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphKernelNodeSetParams", {{"CUgraphNode", "const CUDA_KERNEL_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphLaunch", {{"CUgraphExec", "CUstream", }, {2, 2}}},
{"cuGraphMemcpyNodeGetParams", {{"CUgraphNode", "CUDA_MEMCPY3D *", }, {2, 2}}},
{"cuGraphMemcpyNodeSetParams", {{"CUgraphNode", "const CUDA_MEMCPY3D *", }, {2, 2}}},
{"cuGraphMemsetNodeGetParams", {{"CUgraphNode", "CUDA_MEMSET_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphMemsetNodeSetParams", {{"CUgraphNode", "const CUDA_MEMSET_NODE_PARAMS *", }, {2, 2}}},
{"cuGraphNodeFindInClone", {{"CUgraphNode *", "CUgraphNode", "CUgraph", }, {3, 3}}},
{"cuGraphNodeGetDependencies", {{"CUgraphNode", "CUgraphNode *", "int *", }, {3, 3}}},
{"cuGraphNodeGetDependentNodes", {{"CUgraphNode", "CUgraphNode *", "int *", }, {3, 3}}},
{"cuGraphNodeGetType", {{"CUgraphNode", "CUgraphNodeType *", }, {2, 2}}},
{"cuGraphRemoveDependencies", {{"CUgraph", "const CUgraphNode *", "const CUgraphNode *", "int", }, {4, 4}}},
{"cuGraphicsMapResources", {{"unsigned int", "CUgraphicsResource *", "CUstream", }, {3, 3}}},
{"cuGraphicsResourceGetMappedMipmappedArray", {{"CUmipmappedArray *", "CUgraphicsResource", }, {2, 2}}},
{"cuGraphicsResourceGetMappedPointer_v2", {{"CUdeviceptr *", "int *", "CUgraphicsResource", }, {3, 3}}},
{"cuGraphicsResourceSetMapFlags_v2", {{"CUgraphicsResource", "unsigned int", }, {2, 2}}},
{"cuGraphicsSubResourceGetMappedArray", {{"CUarray *", "CUgraphicsResource", "unsigned int", "unsigned int", }, {4, 4}}},
{"cuGraphicsUnmapResources", {{"unsigned int", "CUgraphicsResource *", "CUstream", }, {3, 3}}},
{"cuGraphicsUnregisterResource", {{"CUgraphicsResource", }, {1, 1}}},
{"cuImportExternalMemory", {{"CUexternalMemory *", "const CUDA_EXTERNAL_MEMORY_HANDLE_DESC *", }, {2, 2}}},
{"cuImportExternalSemaphore", {{"CUexternalSemaphore *", "const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC *", }, {2, 2}}},
{"cuInit", {{"unsigned int", }, {1, 1}}},
{"cuIpcCloseMemHandle", {{"CUdeviceptr", }, {1, 1}}},
{"cuIpcGetEventHandle", {{"CUipcEventHandle *", "CUevent", }, {2, 2}}},
{"cuIpcGetMemHandle", {{"CUipcMemHandle *", "CUdeviceptr", }, {2, 2}}},
{"cuIpcOpenEventHandle", {{"CUevent *", "CUipcEventHandle", }, {2, 2}}},
{"cuIpcOpenMemHandle", {{"CUdeviceptr *", "CUipcMemHandle", "unsigned int", }, {3, 3}}},
{"cuLaunchCooperativeKernel", {{"CUfunction", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "CUstream", "void **", }, {10, 10}}},
{"cuLaunchCooperativeKernelMultiDevice", {{"CUDA_LAUNCH_PARAMS *", "unsigned int", "unsigned int", }, {3, 3}}},
{"cuLaunchHostFunc", {{"CUstream", "CUhostFn", "void *", }, {3, 3}}},
{"cuLaunchKernel", {{"CUfunction", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "unsigned int", "CUstream", "void **", "void **", }, {11, 11}}},
{"cuLinkAddData_v2", {{"CUlinkState", "CUjitInputType", "void *", "int", "const char *", "unsigned int", "CUjit_option *", "void **", }, {8, 8}}},
{"cuLinkAddFile_v2", {{"CUlinkState", "CUjitInputType", "const char *", "unsigned int", "CUjit_option *", "void **", }, {6, 6}}},
{"cuLinkComplete", {{"CUlinkState", "void **", "int *", }, {3, 3}}},
{"cuLinkCreate_v2", {{"unsigned int", "CUjit_option *", "void **", "CUlinkState *", }, {4, 4}}},
{"cuLinkDestroy", {{"CUlinkState", }, {1, 1}}},
{"cuMemAdvise", {{"CUdeviceptr", "int", "CUmem_advise", "CUdevice", }, {4, 4}}},
{"cuMemAllocHost_v2", {{"void **", "int", }, {2, 2}}},
{"cuMemAllocManaged", {{"CUdeviceptr *", "int", "unsigned int", }, {3, 3}}},
{"cuMemAllocPitch_v2", {{"CUdeviceptr *", "int *", "int", "int", "unsigned int", }, {5, 5}}},
{"cuMemAlloc_v2", {{"CUdeviceptr *", "int", }, {2, 2}}},
{"cuMemFreeHost", {{"void *", }, {1, 1}}},
{"cuMemFree_v2", {{"CUdeviceptr", }, {1, 1}}},
{"cuMemGetAddressRange_v2", {{"CUdeviceptr *", "int *", "CUdeviceptr", }, {3, 3}}},
{"cuMemGetInfo_v2", {{"int *", "int *", }, {2, 2}}},
{"cuMemHostAlloc", {{"void **", "int", "unsigned int", }, {3, 3}}},
{"cuMemHostGetDevicePointer_v2", {{"CUdeviceptr *", "void *", "unsigned int", }, {3, 3}}},
{"cuMemHostGetFlags", {{"unsigned int *", "void *", }, {2, 2}}},
{"cuMemHostRegister_v2", {{"void *", "int", "unsigned int", }, {3, 3}}},
{"cuMemHostUnregister", {{"void *", }, {1, 1}}},
{"cuMemPrefetchAsync", {{"CUdeviceptr", "int", "CUdevice", "CUstream", }, {4, 4}}},
{"cuMemRangeGetAttribute", {{"void *", "int", "CUmem_range_attribute", "CUdeviceptr", "int", }, {5, 5}}},
{"cuMemRangeGetAttributes", {{"void **", "int *", "CUmem_range_attribute *", "int", "CUdeviceptr", "int", }, {6, 6}}},
{"cuMemcpy", {{"CUdeviceptr", "CUdeviceptr", "int", }, {3, 3}}},
{"cuMemcpy2DAsync_v2", {{"const CUDA_MEMCPY2D *", "CUstream", }, {2, 2}}},
{"cuMemcpy2DUnaligned_v2", {{"const CUDA_MEMCPY2D *", }, {1, 1}}},
{"cuMemcpy2D_v2", {{"const CUDA_MEMCPY2D *", }, {1, 1}}},
{"cuMemcpy3DAsync_v2", {{"const CUDA_MEMCPY3D *", "CUstream", }, {2, 2}}},
{"cuMemcpy3DPeer", {{"const CUDA_MEMCPY3D_PEER *", }, {1, 1}}},
{"cuMemcpy3DPeerAsync", {{"const CUDA_MEMCPY3D_PEER *", "CUstream", }, {2, 2}}},
{"cuMemcpy3D_v2", {{"const CUDA_MEMCPY3D *", }, {1, 1}}},
{"cuMemcpyAsync", {{"CUdeviceptr", "CUdeviceptr", "int", "CUstream", }, {4, 4}}},
{"cuMemcpyAtoA_v2", {{"CUarray", "int", "CUarray", "int", "int", }, {5, 5}}},
{"cuMemcpyAtoD_v2", {{"CUdeviceptr", "CUarray", "int", "int", }, {4, 4}}},
{"cuMemcpyAtoHAsync_v2", {{"void *", "CUarray", "int", "int", "CUstream", }, {5, 5}}},
{"cuMemcpyAtoH_v2", {{"void *", "CUarray", "int", "int", }, {4, 4}}},
{"cuMemcpyDtoA_v2", {{"CUarray", "int", "CUdeviceptr", "int", }, {4, 4}}},
{"cuMemcpyDtoDAsync_v2", {{"CUdeviceptr", "CUdeviceptr", "int", "CUstream", }, {4, 4}}},
{"cuMemcpyDtoD_v2", {{"CUdeviceptr", "CUdeviceptr", "int", }, {3, 3}}},
{"cuMemcpyDtoHAsync_v2", {{"void *", "CUdeviceptr", "int", "CUstream", }, {4, 4}}},
{"cuMemcpyDtoH_v2", {{"void *", "CUdeviceptr", "int", }, {3, 3}}},
{"cuMemcpyHtoAAsync_v2", {{"CUarray", "int", "const void *", "int", "CUstream", }, {5, 5}}},
{"cuMemcpyHtoA_v2", {{"CUarray", "int", "const void *", "int", }, {4, 4}}},
{"cuMemcpyHtoDAsync_v2", {{"CUdeviceptr", "const void *", "int", "CUstream", }, {4, 4}}},
{"cuMemcpyHtoD_v2", {{"CUdeviceptr", "const void *", "int", }, {3, 3}}},
{"cuMemcpyPeer", {{"CUdeviceptr", "CUcontext", "CUdeviceptr", "CUcontext", "int", }, {5, 5}}},
{"cuMemcpyPeerAsync", {{"CUdeviceptr", "CUcontext", "CUdeviceptr", "CUcontext", "int", "CUstream", }, {6, 6}}},
{"cuMemsetD16Async", {{"CUdeviceptr", "unsigned short", "int", "CUstream", }, {4, 4}}},
{"cuMemsetD16_v2", {{"CUdeviceptr", "unsigned short", "int", }, {3, 3}}},
{"cuMemsetD2D16Async", {{"CUdeviceptr", "int", "unsigned short", "int", "int", "CUstream", }, {6, 6}}},
{"cuMemsetD2D16_v2", {{"CUdeviceptr", "int", "unsigned short", "int", "int", }, {5, 5}}},
{"cuMemsetD2D32Async", {{"CUdeviceptr", "int", "unsigned int", "int", "int", "CUstream", }, {6, 6}}},
{"cuMemsetD2D32_v2", {{"CUdeviceptr", "int", "unsigned int", "int", "int", }, {5, 5}}},
{"cuMemsetD2D8Async", {{"CUdeviceptr", "int", "unsigned char", "int", "int", "CUstream", }, {6, 6}}},
{"cuMemsetD2D8_v2", {{"CUdeviceptr", "int", "unsigned char", "int", "int", }, {5, 5}}},
{"cuMemsetD32Async", {{"CUdeviceptr", "unsigned int", "int", "CUstream", }, {4, 4}}},
{"cuMemsetD32_v2", {{"CUdeviceptr", "unsigned int", "int", }, {3, 3}}},
{"cuMemsetD8Async", {{"CUdeviceptr", "unsigned char", "int", "CUstream", }, {4, 4}}},
{"cuMemsetD8_v2", {{"CUdeviceptr", "unsigned char", "int", }, {3, 3}}},
{"cuMipmappedArrayCreate", {{"CUmipmappedArray *", "const CUDA_ARRAY3D_DESCRIPTOR *", "unsigned int", }, {3, 3}}},
{"cuMipmappedArrayDestroy", {{"CUmipmappedArray", }, {1, 1}}},
{"cuMipmappedArrayGetLevel", {{"CUarray *", "CUmipmappedArray", "unsigned int", }, {3, 3}}},
{"cuModuleGetFunction", {{"CUfunction *", "CUmodule", "const char *", }, {3, 3}}},
{"cuModuleGetGlobal_v2", {{"CUdeviceptr *", "int *", "CUmodule", "const char *", }, {4, 4}}},
{"cuModuleGetSurfRef", {{"CUsurfref *", "CUmodule", "const char *", }, {3, 3}}},
{"cuModuleGetTexRef", {{"CUtexref *", "CUmodule", "const char *", }, {3, 3}}},
{"cuModuleLoad", {{"CUmodule *", "const char *", }, {2, 2}}},
{"cuModuleLoadData", {{"CUmodule *", "const void *", }, {2, 2}}},
{"cuModuleLoadDataEx", {{"CUmodule *", "const void *", "unsigned int", "CUjit_option *", "void **", }, {5, 5}}},
{"cuModuleLoadFatBinary", {{"CUmodule *", "const void *", }, {2, 2}}},
{"cuModuleUnload", {{"CUmodule", }, {1, 1}}},
{"cuOccupancyMaxActiveBlocksPerMultiprocessor", {{"int *", "CUfunction", "int", "int", }, {4, 4}}},
{"cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {{"int *", "CUfunction", "int", "int", "unsigned int", }, {5, 5}}},
{"cuOccupancyMaxPotentialBlockSize", {{"int *", "int *", "CUfunction", "CUoccupancyB2DSize", "int", "int", }, {6, 6}}},
{"cuOccupancyMaxPotentialBlockSizeWithFlags", {{"int *", "int *", "CUfunction", "CUoccupancyB2DSize", "int", "int", "unsigned int", }, {7, 7}}},
{"cuPointerGetAttribute", {{"void *", "CUpointer_attribute", "CUdeviceptr", }, {3, 3}}},
{"cuPointerGetAttributes", {{"unsigned int", "CUpointer_attribute *", "void **", "CUdeviceptr", }, {4, 4}}},
{"cuPointerSetAttribute", {{"const void *", "CUpointer_attribute", "CUdeviceptr", }, {3, 3}}},
{"cuSignalExternalSemaphoresAsync", {{"const CUexternalSemaphore *", "const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *", "unsigned int", "CUstream", }, {4, 4}}},
{"cuStreamAddCallback", {{"CUstream", "CUstreamCallback", "void *", "unsigned int", }, {4, 4}}},
{"cuStreamAttachMemAsync", {{"CUstream", "CUdeviceptr", "int", "unsigned int", }, {4, 4}}},
{"cuStreamBatchMemOp", {{"CUstream", "unsigned int", "CUstreamBatchMemOpParams *", "unsigned int", }, {4, 4}}},
{"cuStreamBeginCapture_v2", {{"CUstream", "CUstreamCaptureMode", }, {2, 2}}},
{"cuStreamCreate", {{"CUstream *", "unsigned int", }, {2, 2}}},
{"cuStreamCreateWithPriority", {{"CUstream *", "unsigned int", "int", }, {3, 3}}},
{"cuStreamDestroy_v2", {{"CUstream", }, {1, 1}}},
{"cuStreamEndCapture", {{"CUstream", "CUgraph *", }, {2, 2}}},
{"cuStreamGetCaptureInfo", {{"CUstream", "CUstreamCaptureStatus *", "cuuint64_t *", }, {3, 3}}},
{"cuStreamGetCtx", {{"CUstream", "CUcontext *", }, {2, 2}}},
{"cuStreamGetFlags", {{"CUstream", "unsigned int *", }, {2, 2}}},
{"cuStreamGetPriority", {{"CUstream", "int *", }, {2, 2}}},
{"cuStreamIsCapturing", {{"CUstream", "CUstreamCaptureStatus *", }, {2, 2}}},
{"cuStreamQuery", {{"CUstream", }, {1, 1}}},
{"cuStreamSynchronize", {{"CUstream", }, {1, 1}}},
{"cuStreamWaitEvent", {{"CUstream", "CUevent", "unsigned int", }, {3, 3}}},
{"cuStreamWaitValue32", {{"CUstream", "CUdeviceptr", "cuuint32_t", "unsigned int", }, {4, 4}}},
{"cuStreamWaitValue64", {{"CUstream", "CUdeviceptr", "cuuint64_t", "unsigned int", }, {4, 4}}},
{"cuStreamWriteValue32", {{"CUstream", "CUdeviceptr", "cuuint32_t", "unsigned int", }, {4, 4}}},
{"cuStreamWriteValue64", {{"CUstream", "CUdeviceptr", "cuuint64_t", "unsigned int", }, {4, 4}}},
{"cuSurfObjectCreate", {{"CUsurfObject *", "const CUDA_RESOURCE_DESC *", }, {2, 2}}},
{"cuSurfObjectDestroy", {{"CUsurfObject", }, {1, 1}}},
{"cuSurfObjectGetResourceDesc", {{"CUDA_RESOURCE_DESC *", "CUsurfObject", }, {2, 2}}},
{"cuSurfRefGetArray", {{"CUarray *", "CUsurfref", }, {2, 2}}},
{"cuSurfRefSetArray", {{"CUsurfref", "CUarray", "unsigned int", }, {3, 3}}},
{"cuTexObjectCreate", {{"CUtexObject *", "const CUDA_RESOURCE_DESC *", "const CUDA_TEXTURE_DESC *", "const CUDA_RESOURCE_VIEW_DESC *", }, {4, 4}}},
{"cuTexObjectDestroy", {{"CUtexObject", }, {1, 1}}},
{"cuTexObjectGetResourceDesc", {{"CUDA_RESOURCE_DESC *", "CUtexObject", }, {2, 2}}},
{"cuTexObjectGetResourceViewDesc", {{"CUDA_RESOURCE_VIEW_DESC *", "CUtexObject", }, {2, 2}}},
{"cuTexObjectGetTextureDesc", {{"CUDA_TEXTURE_DESC *", "CUtexObject", }, {2, 2}}},
{"cuTexRefCreate", {{"CUtexref *", }, {1, 1}}},
{"cuTexRefDestroy", {{"CUtexref", }, {1, 1}}},
{"cuTexRefGetAddressMode", {{"CUaddress_mode *", "CUtexref", "int", }, {3, 3}}},
{"cuTexRefGetAddress_v2", {{"CUdeviceptr *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetArray", {{"CUarray *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetBorderColor", {{"float *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetFilterMode", {{"CUfilter_mode *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetFlags", {{"unsigned int *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetFormat", {{"CUarray_format *", "int *", "CUtexref", }, {3, 3}}},
{"cuTexRefGetMaxAnisotropy", {{"int *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetMipmapFilterMode", {{"CUfilter_mode *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetMipmapLevelBias", {{"float *", "CUtexref", }, {2, 2}}},
{"cuTexRefGetMipmapLevelClamp", {{"float *", "float *", "CUtexref", }, {3, 3}}},
{"cuTexRefGetMipmappedArray", {{"CUmipmappedArray *", "CUtexref", }, {2, 2}}},
{"cuTexRefSetAddress2D_v3", {{"CUtexref", "const CUDA_ARRAY_DESCRIPTOR *", "CUdeviceptr", "int", }, {4, 4}}},
{"cuTexRefSetAddressMode", {{"CUtexref", "int", "CUaddress_mode", }, {3, 3}}},
{"cuTexRefSetAddress_v2", {{"int *", "CUtexref", "CUdeviceptr", "int", }, {4, 4}}},
{"cuTexRefSetArray", {{"CUtexref", "CUarray", "unsigned int", }, {3, 3}}},
{"cuTexRefSetBorderColor", {{"CUtexref", "float *", }, {2, 2}}},
{"cuTexRefSetFilterMode", {{"CUtexref", "CUfilter_mode", }, {2, 2}}},
{"cuTexRefSetFlags", {{"CUtexref", "unsigned int", }, {2, 2}}},
{"cuTexRefSetFormat", {{"CUtexref", "CUarray_format", "int", }, {3, 3}}},
{"cuTexRefSetMaxAnisotropy", {{"CUtexref", "unsigned int", }, {2, 2}}},
{"cuTexRefSetMipmapFilterMode", {{"CUtexref", "CUfilter_mode", }, {2, 2}}},
{"cuTexRefSetMipmapLevelBias", {{"CUtexref", "float", }, {2, 2}}},
{"cuTexRefSetMipmapLevelClamp", {{"CUtexref", "float", "float", }, {3, 3}}},
{"cuTexRefSetMipmappedArray", {{"CUtexref", "CUmipmappedArray", "unsigned int", }, {3, 3}}},
{"cuThreadExchangeStreamCaptureMode", {{"CUstreamCaptureMode *", }, {1, 1}}},
{"cuWaitExternalSemaphoresAsync", {{"const CUexternalSemaphore *", "const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *", "unsigned int", "CUstream", }, {4, 4}}},
{"cudaArrayGetInfo", {{"struct cudaChannelFormatDesc *", "struct cudaExtent *", "unsigned int *", "cudaArray_t", }, {4, 4}}},
{"cudaBindSurfaceToArray", {{"const struct surfaceReference *", "cudaArray_const_t", "const struct cudaChannelFormatDesc *", }, {3, 3}}},
{"cudaBindTexture", {{"int *", "const struct textureReference *", "const void *", "const struct cudaChannelFormatDesc *", "int", }, {4, 5}}},
{"cudaBindTexture2D", {{"int *", "const struct textureReference *", "const void *", "const struct cudaChannelFormatDesc *", "int", "int", "int", }, {7, 7}}},
{"cudaBindTextureToArray", {{"const struct textureReference *", "cudaArray_const_t", "const struct cudaChannelFormatDesc *", }, {3, 3}}},
{"cudaBindTextureToMipmappedArray", {{"const struct textureReference *", "cudaMipmappedArray_const_t", "const struct cudaChannelFormatDesc *", }, {3, 3}}},
{"cudaChooseDevice", {{"int *", "const struct cudaDeviceProp *", }, {2, 2}}},
{"cudaCreateChannelDesc", {{"int", "int", "int", "int", "enum cudaChannelFormatKind", }, {5, 5}}},
{"cudaCreateSurfaceObject", {{"cudaSurfaceObject_t *", "const struct cudaResourceDesc *", }, {2, 2}}},
{"cudaCreateTextureObject", {{"cudaTextureObject_t *", "const struct cudaResourceDesc *", "const struct cudaTextureDesc *", "const struct cudaResourceViewDesc *", }, {4, 4}}},
{"cudaDestroyExternalMemory", {{"cudaExternalMemory_t", }, {1, 1}}},
{"cudaDestroyExternalSemaphore", {{"cudaExternalSemaphore_t", }, {1, 1}}},
{"cudaDestroySurfaceObject", {{"cudaSurfaceObject_t", }, {1, 1}}},
{"cudaDestroyTextureObject", {{"cudaTextureObject_t", }, {1, 1}}},
{"cudaDeviceCanAccessPeer", {{"int *", "int", "int", }, {3, 3}}},
{"cudaDeviceDisablePeerAccess", {{"int", }, {1, 1}}},
{"cudaDeviceEnablePeerAccess", {{"int", "unsigned int", }, {2, 2}}},
{"cudaDeviceGetAttribute", {{"int *", "enum cudaDeviceAttr", "int", }, {3, 3}}},
{"cudaDeviceGetByPCIBusId", {{"int *", "const char *", }, {2, 2}}},
{"cudaDeviceGetCacheConfig", {{"enum cudaFuncCache *", }, {1, 1}}},
{"cudaDeviceGetLimit", {{"int *", "enum cudaLimit", }, {2, 2}}},
{"cudaDeviceGetP2PAttribute", {{"int *", "enum cudaDeviceP2PAttr", "int", "int", }, {4, 4}}},
{"cudaDeviceGetPCIBusId", {{"char *", "int", "int", }, {3, 3}}},
{"cudaDeviceGetSharedMemConfig", {{"enum cudaSharedMemConfig *", }, {1, 1}}},
{"cudaDeviceGetStreamPriorityRange", {{"int *", "int *", }, {2, 2}}},
{"cudaDeviceReset", {{}, {0, 0}}},
{"cudaDeviceSetCacheConfig", {{"enum cudaFuncCache", }, {1, 1}}},
{"cudaDeviceSetLimit", {{"enum cudaLimit", "int", }, {2, 2}}},
{"cudaDeviceSetSharedMemConfig", {{"enum cudaSharedMemConfig", }, {1, 1}}},
{"cudaDeviceSynchronize", {{}, {0, 0}}},
{"cudaDriverGetVersion", {{"int *", }, {1, 1}}},
{"cudaEventCreate", {{"cudaEvent_t *", }, {1, 1}}},
{"cudaEventCreateWithFlags", {{"cudaEvent_t *", "unsigned int", }, {2, 2}}},
{"cudaEventDestroy", {{"cudaEvent_t", }, {1, 1}}},
{"cudaEventElapsedTime", {{"float *", "cudaEvent_t", "cudaEvent_t", }, {3, 3}}},
{"cudaEventQuery", {{"cudaEvent_t", }, {1, 1}}},
{"cudaEventRecord", {{"cudaEvent_t", "cudaStream_t", }, {1, 2}}},
{"cudaEventSynchronize", {{"cudaEvent_t", }, {1, 1}}},
{"cudaExternalMemoryGetMappedBuffer", {{"void **", "cudaExternalMemory_t", "const struct cudaExternalMemoryBufferDesc *", }, {3, 3}}},
{"cudaExternalMemoryGetMappedMipmappedArray", {{"cudaMipmappedArray_t *", "cudaExternalMemory_t", "const struct cudaExternalMemoryMipmappedArrayDesc *", }, {3, 3}}},
{"cudaFree", {{"void *", }, {1, 1}}},
{"cudaFreeArray", {{"cudaArray_t", }, {1, 1}}},
{"cudaFreeHost", {{"void *", }, {1, 1}}},
{"cudaFreeMipmappedArray", {{"cudaMipmappedArray_t", }, {1, 1}}},
{"cudaFuncGetAttributes", {{"struct cudaFuncAttributes *", "const void *", }, {2, 2}}},
{"cudaFuncSetAttribute", {{"const void *", "enum cudaFuncAttribute", "int", }, {3, 3}}},
{"cudaFuncSetCacheConfig", {{"const void *", "enum cudaFuncCache", }, {2, 2}}},
{"cudaFuncSetSharedMemConfig", {{"const void *", "enum cudaSharedMemConfig", }, {2, 2}}},
{"cudaGLGetDevices", {{"unsigned int *", "int *", "unsigned int", "enum cudaGLDeviceList", }, {4, 4}}},
{"cudaGLMapBufferObject", {{"void **", "GLuint", }, {2, 2}}},
{"cudaGLMapBufferObjectAsync", {{"void **", "GLuint", "cudaStream_t", }, {3, 3}}},
{"cudaGLRegisterBufferObject", {{"GLuint", }, {1, 1}}},
{"cudaGLSetBufferObjectMapFlags", {{"GLuint", "unsigned int", }, {2, 2}}},
{"cudaGLSetGLDevice", {{"int", }, {1, 1}}},
{"cudaGLUnmapBufferObject", {{"GLuint", }, {1, 1}}},
{"cudaGLUnmapBufferObjectAsync", {{"GLuint", "cudaStream_t", }, {2, 2}}},
{"cudaGLUnregisterBufferObject", {{"GLuint", }, {1, 1}}},
{"cudaGetChannelDesc", {{"struct cudaChannelFormatDesc *", "cudaArray_const_t", }, {2, 2}}},
{"cudaGetDevice", {{"int *", }, {1, 1}}},
{"cudaGetDeviceCount", {{"int *", }, {1, 1}}},
{"cudaGetDeviceFlags", {{"unsigned int *", }, {1, 1}}},
{"cudaGetDeviceProperties", {{"struct cudaDeviceProp *", "int", }, {2, 2}}},
{"cudaGetErrorName", {{"cudaError_t", }, {1, 1}}},
{"cudaGetErrorString", {{"cudaError_t", }, {1, 1}}},
{"cudaGetExportTable", {{"const void **", "const cudaUUID_t *", }, {2, 2}}},
{"cudaGetLastError", {{}, {0, 0}}},
{"cudaGetMipmappedArrayLevel", {{"cudaArray_t *", "cudaMipmappedArray_const_t", "unsigned int", }, {3, 3}}},
{"cudaGetSurfaceObjectResourceDesc", {{"struct cudaResourceDesc *", "cudaSurfaceObject_t", }, {2, 2}}},
{"cudaGetSurfaceReference", {{"const struct surfaceReference **", "const void *", }, {2, 2}}},
{"cudaGetSymbolAddress", {{"void **", "const void *", }, {2, 2}}},
{"cudaGetSymbolSize", {{"int *", "const void *", }, {2, 2}}},
{"cudaGetTextureAlignmentOffset", {{"int *", "const struct textureReference *", }, {2, 2}}},
{"cudaGetTextureObjectResourceDesc", {{"struct cudaResourceDesc *", "cudaTextureObject_t", }, {2, 2}}},
{"cudaGetTextureObjectResourceViewDesc", {{"struct cudaResourceViewDesc *", "cudaTextureObject_t", }, {2, 2}}},
{"cudaGetTextureObjectTextureDesc", {{"struct cudaTextureDesc *", "cudaTextureObject_t", }, {2, 2}}},
{"cudaGetTextureReference", {{"const struct textureReference **", "const void *", }, {2, 2}}},
{"cudaGraphAddChildGraphNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", "cudaGraph_t", }, {5, 5}}},
{"cudaGraphAddDependencies", {{"cudaGraph_t", "const cudaGraphNode_t *", "const cudaGraphNode_t *", "int", }, {4, 4}}},
{"cudaGraphAddEmptyNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", }, {4, 4}}},
{"cudaGraphAddHostNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", "const struct cudaHostNodeParams *", }, {5, 5}}},
{"cudaGraphAddKernelNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", "const struct cudaKernelNodeParams *", }, {5, 5}}},
{"cudaGraphAddMemcpyNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", "const struct cudaMemcpy3DParms *", }, {5, 5}}},
{"cudaGraphAddMemsetNode", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "int", "const struct cudaMemsetParams *", }, {5, 5}}},
{"cudaGraphChildGraphNodeGetGraph", {{"cudaGraphNode_t", "cudaGraph_t *", }, {2, 2}}},
{"cudaGraphClone", {{"cudaGraph_t *", "cudaGraph_t", }, {2, 2}}},
{"cudaGraphCreate", {{"cudaGraph_t *", "unsigned int", }, {2, 2}}},
{"cudaGraphDestroy", {{"cudaGraph_t", }, {1, 1}}},
{"cudaGraphDestroyNode", {{"cudaGraphNode_t", }, {1, 1}}},
{"cudaGraphExecDestroy", {{"cudaGraphExec_t", }, {1, 1}}},
{"cudaGraphExecKernelNodeSetParams", {{"cudaGraphExec_t", "cudaGraphNode_t", "const struct cudaKernelNodeParams *", }, {3, 3}}},
{"cudaGraphGetEdges", {{"cudaGraph_t", "cudaGraphNode_t *", "cudaGraphNode_t *", "int *", }, {4, 4}}},
{"cudaGraphGetNodes", {{"cudaGraph_t", "cudaGraphNode_t *", "int *", }, {3, 3}}},
{"cudaGraphGetRootNodes", {{"cudaGraph_t", "cudaGraphNode_t *", "int *", }, {3, 3}}},
{"cudaGraphHostNodeGetParams", {{"cudaGraphNode_t", "struct cudaHostNodeParams *", }, {2, 2}}},
{"cudaGraphHostNodeSetParams", {{"cudaGraphNode_t", "const struct cudaHostNodeParams *", }, {2, 2}}},
{"cudaGraphInstantiate", {{"cudaGraphExec_t *", "cudaGraph_t", "cudaGraphNode_t *", "char *", "int", }, {5, 5}}},
{"cudaGraphKernelNodeGetParams", {{"cudaGraphNode_t", "struct cudaKernelNodeParams *", }, {2, 2}}},
{"cudaGraphKernelNodeSetParams", {{"cudaGraphNode_t", "const struct cudaKernelNodeParams *", }, {2, 2}}},
{"cudaGraphLaunch", {{"cudaGraphExec_t", "cudaStream_t", }, {2, 2}}},
{"cudaGraphMemcpyNodeGetParams", {{"cudaGraphNode_t", "struct cudaMemcpy3DParms *", }, {2, 2}}},
{"cudaGraphMemcpyNodeSetParams", {{"cudaGraphNode_t", "const struct cudaMemcpy3DParms *", }, {2, 2}}},
{"cudaGraphMemsetNodeGetParams", {{"cudaGraphNode_t", "struct cudaMemsetParams *", }, {2, 2}}},
{"cudaGraphMemsetNodeSetParams", {{"cudaGraphNode_t", "const struct cudaMemsetParams *", }, {2, 2}}},
{"cudaGraphNodeFindInClone", {{"cudaGraphNode_t *", "cudaGraphNode_t", "cudaGraph_t", }, {3, 3}}},
{"cudaGraphNodeGetDependencies", {{"cudaGraphNode_t", "cudaGraphNode_t *", "int *", }, {3, 3}}},
{"cudaGraphNodeGetDependentNodes", {{"cudaGraphNode_t", "cudaGraphNode_t *", "int *", }, {3, 3}}},
{"cudaGraphNodeGetType", {{"cudaGraphNode_t", "enum cudaGraphNodeType *", }, {2, 2}}},
{"cudaGraphRemoveDependencies", {{"cudaGraph_t", "const cudaGraphNode_t *", "const cudaGraphNode_t *", "int", }, {4, 4}}},
{"cudaGraphicsGLRegisterBuffer", {{"struct cudaGraphicsResource **", "GLuint", "unsigned int", }, {3, 3}}},
{"cudaGraphicsGLRegisterImage", {{"struct cudaGraphicsResource **", "GLuint", "GLenum", "unsigned int", }, {4, 4}}},
{"cudaGraphicsMapResources", {{"int", "cudaGraphicsResource_t *", "cudaStream_t", }, {2, 3}}},
{"cudaGraphicsResourceGetMappedMipmappedArray", {{"cudaMipmappedArray_t *", "cudaGraphicsResource_t", }, {2, 2}}},
{"cudaGraphicsResourceGetMappedPointer", {{"void **", "int *", "cudaGraphicsResource_t", }, {3, 3}}},
{"cudaGraphicsResourceSetMapFlags", {{"cudaGraphicsResource_t", "unsigned int", }, {2, 2}}},
{"cudaGraphicsSubResourceGetMappedArray", {{"cudaArray_t *", "cudaGraphicsResource_t", "unsigned int", "unsigned int", }, {4, 4}}},
{"cudaGraphicsUnmapResources", {{"int", "cudaGraphicsResource_t *", "cudaStream_t", }, {2, 3}}},
{"cudaGraphicsUnregisterResource", {{"cudaGraphicsResource_t", }, {1, 1}}},
{"cudaHostAlloc", {{"void **", "int", "unsigned int", }, {3, 3}}},
{"cudaHostGetDevicePointer", {{"void **", "void *", "unsigned int", }, {3, 3}}},
{"cudaHostGetFlags", {{"unsigned int *", "void *", }, {2, 2}}},
{"cudaHostRegister", {{"void *", "int", "unsigned int", }, {3, 3}}},
{"cudaHostUnregister", {{"void *", }, {1, 1}}},
{"cudaImportExternalMemory", {{"cudaExternalMemory_t *", "const struct cudaExternalMemoryHandleDesc *", }, {2, 2}}},
{"cudaImportExternalSemaphore", {{"cudaExternalSemaphore_t *", "const struct cudaExternalSemaphoreHandleDesc *", }, {2, 2}}},
{"cudaIpcCloseMemHandle", {{"void *", }, {1, 1}}},
{"cudaIpcGetEventHandle", {{"cudaIpcEventHandle_t *", "cudaEvent_t", }, {2, 2}}},
{"cudaIpcGetMemHandle", {{"cudaIpcMemHandle_t *", "void *", }, {2, 2}}},
{"cudaIpcOpenEventHandle", {{"cudaEvent_t *", "cudaIpcEventHandle_t", }, {2, 2}}},
{"cudaIpcOpenMemHandle", {{"void **", "cudaIpcMemHandle_t", "unsigned int", }, {3, 3}}},
{"cudaLaunchCooperativeKernel", {{"const void *", "dim3", "dim3", "void **", "int", "cudaStream_t", }, {6, 6}}},
{"cudaLaunchCooperativeKernelMultiDevice", {{"struct cudaLaunchParams *", "unsigned int", "unsigned int", }, {2, 3}}},
{"cudaLaunchHostFunc", {{"cudaStream_t", "cudaHostFn_t", "void *", }, {3, 3}}},
{"cudaLaunchKernel", {{"const void *", "dim3", "dim3", "void **", "int", "cudaStream_t", }, {6, 6}}},
{"cudaMalloc", {{"void **", "int", }, {2, 2}}},
{"cudaMalloc3D", {{"struct cudaPitchedPtr *", "struct cudaExtent", }, {2, 2}}},
{"cudaMalloc3DArray", {{"cudaArray_t *", "const struct cudaChannelFormatDesc *", "struct cudaExtent", "unsigned int", }, {3, 4}}},
{"cudaMallocArray", {{"cudaArray_t *", "const struct cudaChannelFormatDesc *", "int", "int", "unsigned int", }, {3, 5}}},
{"cudaMallocHost", {{"void **", "int", }, {2, 2}}},
{"cudaMallocManaged", {{"void **", "int", "unsigned int", }, {2, 3}}},
{"cudaMallocMipmappedArray", {{"cudaMipmappedArray_t *", "const struct cudaChannelFormatDesc *", "struct cudaExtent", "unsigned int", "unsigned int", }, {4, 5}}},
{"cudaMallocPitch", {{"void **", "int *", "int", "int", }, {4, 4}}},
{"cudaMemAdvise", {{"const void *", "int", "enum cudaMemoryAdvise", "int", }, {4, 4}}},
{"cudaMemGetInfo", {{"int *", "int *", }, {2, 2}}},
{"cudaMemPrefetchAsync", {{"const void *", "int", "int", "cudaStream_t", }, {3, 4}}},
{"cudaMemRangeGetAttribute", {{"void *", "int", "enum cudaMemRangeAttribute", "const void *", "int", }, {5, 5}}},
{"cudaMemRangeGetAttributes", {{"void **", "int *", "enum cudaMemRangeAttribute *", "int", "const void *", "int", }, {6, 6}}},
{"cudaMemcpy", {{"void *", "const void *", "int", "enum cudaMemcpyKind", }, {4, 4}}},
{"cudaMemcpy2D", {{"void *", "int", "const void *", "int", "int", "int", "enum cudaMemcpyKind", }, {7, 7}}},
{"cudaMemcpy2DArrayToArray", {{"cudaArray_t", "int", "int", "cudaArray_const_t", "int", "int", "int", "int", "enum cudaMemcpyKind", }, {8, 9}}},
{"cudaMemcpy2DAsync", {{"void *", "int", "const void *", "int", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {7, 8}}},
{"cudaMemcpy2DFromArray", {{"void *", "int", "cudaArray_const_t", "int", "int", "int", "int", "enum cudaMemcpyKind", }, {8, 8}}},
{"cudaMemcpy2DFromArrayAsync", {{"void *", "int", "cudaArray_const_t", "int", "int", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {8, 9}}},
{"cudaMemcpy2DToArray", {{"cudaArray_t", "int", "int", "const void *", "int", "int", "int", "enum cudaMemcpyKind", }, {8, 8}}},
{"cudaMemcpy2DToArrayAsync", {{"cudaArray_t", "int", "int", "const void *", "int", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {8, 9}}},
{"cudaMemcpy3D", {{"const struct cudaMemcpy3DParms *", }, {1, 1}}},
{"cudaMemcpy3DAsync", {{"const struct cudaMemcpy3DParms *", "cudaStream_t", }, {1, 2}}},
{"cudaMemcpy3DPeer", {{"const struct cudaMemcpy3DPeerParms *", }, {1, 1}}},
{"cudaMemcpy3DPeerAsync", {{"const struct cudaMemcpy3DPeerParms *", "cudaStream_t", }, {1, 2}}},
{"cudaMemcpyArrayToArray", {{"cudaArray_t", "int", "int", "cudaArray_const_t", "int", "int", "int", "enum cudaMemcpyKind", }, {7, 8}}},
{"cudaMemcpyAsync", {{"void *", "const void *", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {4, 5}}},
{"cudaMemcpyFromArray", {{"void *", "cudaArray_const_t", "int", "int", "int", "enum cudaMemcpyKind", }, {6, 6}}},
{"cudaMemcpyFromArrayAsync", {{"void *", "cudaArray_const_t", "int", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {6, 7}}},
{"cudaMemcpyFromSymbol", {{"void *", "const void *", "int", "int", "enum cudaMemcpyKind", }, {3, 5}}},
{"cudaMemcpyFromSymbolAsync", {{"void *", "const void *", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {5, 6}}},
{"cudaMemcpyPeer", {{"void *", "int", "const void *", "int", "int", }, {5, 5}}},
{"cudaMemcpyPeerAsync", {{"void *", "int", "const void *", "int", "int", "cudaStream_t", }, {5, 6}}},
{"cudaMemcpyToArray", {{"cudaArray_t", "int", "int", "const void *", "int", "enum cudaMemcpyKind", }, {6, 6}}},
{"cudaMemcpyToArrayAsync", {{"cudaArray_t", "int", "int", "const void *", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {6, 7}}},
{"cudaMemcpyToSymbol", {{"const void *", "const void *", "int", "int", "enum cudaMemcpyKind", }, {3, 5}}},
{"cudaMemcpyToSymbolAsync", {{"const void *", "const void *", "int", "int", "enum cudaMemcpyKind", "cudaStream_t", }, {5, 6}}},
{"cudaMemset", {{"void *", "int", "int", }, {3, 3}}},
{"cudaMemset2D", {{"void *", "int", "int", "int", "int", }, {5, 5}}},
{"cudaMemset2DAsync", {{"void *", "int", "int", "int", "int", "cudaStream_t", }, {5, 6}}},
{"cudaMemset3D", {{"struct cudaPitchedPtr", "int", "struct cudaExtent", }, {3, 3}}},
{"cudaMemset3DAsync", {{"struct cudaPitchedPtr", "int", "struct cudaExtent", "cudaStream_t", }, {3, 4}}},
{"cudaMemsetAsync", {{"void *", "int", "int", "cudaStream_t", }, {3, 4}}},
{"cudaOccupancyMaxActiveBlocksPerMultiprocessor", {{"int *", "const void *", "int", "int", }, {4, 4}}},
{"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {{"int *", "const void *", "int", "int", "unsigned int", }, {5, 5}}},
{"cudaPeekAtLastError", {{}, {0, 0}}},
{"cudaPointerGetAttributes", {{"struct cudaPointerAttributes *", "const void *", }, {2, 2}}},
{"cudaRuntimeGetVersion", {{"int *", }, {1, 1}}},
{"cudaSetDevice", {{"int", }, {1, 1}}},
{"cudaSetDeviceFlags", {{"unsigned int", }, {1, 1}}},
{"cudaSetDoubleForDevice", {{"double *", }, {1, 1}}},
{"cudaSetDoubleForHost", {{"double *", }, {1, 1}}},
{"cudaSetValidDevices", {{"int *", "int", }, {2, 2}}},
{"cudaSignalExternalSemaphoresAsync", {{"const cudaExternalSemaphore_t *", "const struct cudaExternalSemaphoreSignalParams *", "unsigned int", "cudaStream_t", }, {3, 4}}},
{"cudaStreamAddCallback", {{"cudaStream_t", "cudaStreamCallback_t", "void *", "unsigned int", }, {4, 4}}},
{"cudaStreamAttachMemAsync", {{"cudaStream_t", "void *", "int", "unsigned int", }, {2, 4}}},
{"cudaStreamBeginCapture", {{"cudaStream_t", "enum cudaStreamCaptureMode", }, {2, 2}}},
{"cudaStreamCreate", {{"cudaStream_t *", }, {1, 1}}},
{"cudaStreamCreateWithFlags", {{"cudaStream_t *", "unsigned int", }, {2, 2}}},
{"cudaStreamCreateWithPriority", {{"cudaStream_t *", "unsigned int", "int", }, {3, 3}}},
{"cudaStreamDestroy", {{"cudaStream_t", }, {1, 1}}},
{"cudaStreamEndCapture", {{"cudaStream_t", "cudaGraph_t *", }, {2, 2}}},
{"cudaStreamGetCaptureInfo", {{"cudaStream_t", "enum cudaStreamCaptureStatus *", "unsigned long long *", }, {3, 3}}},
{"cudaStreamGetFlags", {{"cudaStream_t", "unsigned int *", }, {2, 2}}},
{"cudaStreamGetPriority", {{"cudaStream_t", "int *", }, {2, 2}}},
{"cudaStreamIsCapturing", {{"cudaStream_t", "enum cudaStreamCaptureStatus *", }, {2, 2}}},
{"cudaStreamQuery", {{"cudaStream_t", }, {1, 1}}},
{"cudaStreamSynchronize", {{"cudaStream_t", }, {1, 1}}},
{"cudaStreamWaitEvent", {{"cudaStream_t", "cudaEvent_t", "unsigned int", }, {3, 3}}},
{"cudaThreadExchangeStreamCaptureMode", {{"enum cudaStreamCaptureMode *", }, {1, 1}}},
{"cudaThreadExit", {{}, {0, 0}}},
{"cudaThreadGetCacheConfig", {{"enum cudaFuncCache *", }, {1, 1}}},
{"cudaThreadGetLimit", {{"int *", "enum cudaLimit", }, {2, 2}}},
{"cudaThreadSetCacheConfig", {{"enum cudaFuncCache", }, {1, 1}}},
{"cudaThreadSetLimit", {{"enum cudaLimit", "int", }, {2, 2}}},
{"cudaThreadSynchronize", {{}, {0, 0}}},
{"cudaUnbindTexture", {{"const struct textureReference *", }, {1, 1}}},
{"cudaWaitExternalSemaphoresAsync", {{"const cudaExternalSemaphore_t *", "const struct cudaExternalSemaphoreWaitParams *", "unsigned int", "cudaStream_t", }, {3, 4}}},
{"make_cudaExtent", {{"int", "int", "int", }, {3, 3}}},
{"make_cudaPitchedPtr", {{"void *", "int", "int", "int", }, {4, 4}}},
{"make_cudaPos", {{"int", "int", "int", }, {3, 3}}},
// added by hand:
{"cudaGraphAddMemcpyNode1D", {{"cudaGraphNode_t *", "cudaGraph_t", "const cudaGraphNode_t *", "size_t", "void *", "void *", "size_t", "cudaMemcpyKind"}, {8, 8}}},
{"cudaOccupancyMaxPotentialBlockSize", {{"int *", "int *", "T", "size_t", "int"}, {3, 5}}},
{"cudaOccupancyMaxPotentialBlockSizeWithFlags", {{"int *", "int *", "T", "size_t", "int", "unsigned int"}, {3, 6}}},
};

int main() {
  std::fstream literals_out("cuda_literals.cpp", std::ios::out);

  literals_out << "std::vector<std::string> clang_rewrite_literal_names = {\n";

  std::fstream runtime_types_out("runtime_type_names.cpp", std::ios::out);

  std::map<llvm::StringRef, hipCounter> cuda_type_map;
  cuda_type_map.insert(CUDA_RUNTIME_TYPE_NAME_MAP.begin(), CUDA_RUNTIME_TYPE_NAME_MAP.end());
  // cuda_type_map.insert(CUDA_DRIVER_TYPE_NAME_MAP.begin(), CUDA_DRIVER_TYPE_NAME_MAP.end());


  for (std::pair<llvm::StringRef, hipCounter> type_map : cuda_type_map) {
    if (type_map.second.supportDegree == FULL) {
      std::string cuda_name = type_map.first.str();
      std::string hip_name = type_map.second.hipName.str();

      literals_out << "\"" << cuda_name << "\",\n";

      runtime_types_out << "[[clang::matcher(\"" << cuda_name << " type\")]]\n";
      runtime_types_out << "auto " << cuda_name << "_type() {\n";
      runtime_types_out << "  [[clang::matcher_block]]\n";
      runtime_types_out << "  {\n";
      runtime_types_out << "    " << cuda_name << " varname;\n";
      runtime_types_out << "  }\n";
      runtime_types_out << "}\n";

      runtime_types_out << "\n";

      runtime_types_out << "[[clang::replace(\"" << cuda_name << " type\")]]\n";
      runtime_types_out << "auto " << cuda_name << "_replace() {\n";
      runtime_types_out << "  [[clang::matcher_block]]\n";
      runtime_types_out << "  {\n";
      runtime_types_out << "    " << hip_name << " varname;\n";
      runtime_types_out << "  }\n";
      runtime_types_out << "}\n";

      runtime_types_out << "\n";
    }
  }

  runtime_types_out.close();

  std::fstream runtime_funcs_out("runtime_function_names.cpp", std::ios::out);

  for (std::pair<llvm::StringRef, hipCounter> func_map : CUDA_RUNTIME_FUNCTION_MAP) {
    if (func_map.second.supportDegree == FULL) {
      std::string cuda_name = func_map.first.str();
      std::string hip_name = func_map.second.hipName.str();

      literals_out << "\"" << cuda_name << "\",\n";

      int min_params = 0;
      int num_params = 0;
      if (name_to_args.find(cuda_name) == name_to_args.end()) {
        runtime_funcs_out << "/* TODO: FIX ME */\n";
      }
      else {
        min_params = name_to_args[cuda_name].second.first;
        num_params = name_to_args[cuda_name].second.second;
      }

      for (int i = min_params; i <= num_params; i++) {
        runtime_funcs_out << "template<";
        for (int j = 1; j <= i; j++) {
          runtime_funcs_out << name_to_args[cuda_name].first[j-1] << " arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ">\n";
        runtime_funcs_out << "[[clang::matcher(\"" << cuda_name << " " << i << " func\")]]\n";
        runtime_funcs_out << "auto " << cuda_name << i << "_func() {\n";
        runtime_funcs_out << "  [[clang::matcher_block]]\n";
        runtime_funcs_out << "  {\n";
        runtime_funcs_out << "    " << cuda_name << "(";
        for (int j = 1; j <= i; j++) {
          runtime_funcs_out << "arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ");\n";
        runtime_funcs_out << "  }\n";
        runtime_funcs_out << "}\n";

        runtime_funcs_out << "\n";

        runtime_funcs_out << "template<";
        for (int j = 1; j <= i; j++) {
          std::string hip_type = "";
          llvm::StringRef cuda_type = name_to_args[cuda_name].first[j-1];
          std::pair<llvm::StringRef, llvm::StringRef> s = cuda_type.split(" ");
          while (s.second != "") {
            if (cuda_type_map.find(s.first) != cuda_type_map.end()) {
              hip_type += cuda_type_map[s.first].hipName.str() + " ";
            }
            else {
              hip_type += s.first.str() + " ";
            }
            s = s.second.split(" ");
          }

          // do one more time?????
          if (cuda_type_map.find(s.first) != cuda_type_map.end()) {
            hip_type += cuda_type_map[s.first].hipName.str() + " ";
          }
          else {
            hip_type += s.first.str() + " ";
          }


          runtime_funcs_out << hip_type << " arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ">\n";
        runtime_funcs_out << "[[clang::replace(\"" << cuda_name << " " << i << " func\")]]\n";
        runtime_funcs_out << "auto " << cuda_name << i << "_replace() {\n";
        runtime_funcs_out << "  [[clang::matcher_block]]\n";
        runtime_funcs_out << "  {\n";
        runtime_funcs_out << "    " << hip_name << "(";
        for (int j = 1; j <= i; j++) {
          runtime_funcs_out << "arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ");\n";
        runtime_funcs_out << "  }\n";
        runtime_funcs_out << "}\n";

        runtime_funcs_out << "\n";
      }

    }
  }

  literals_out << "};\n";

  literals_out.close();

  runtime_funcs_out.close();

  std::fstream kernels_out("kernel_launches.cpp", std::ios::out);

  std::vector<std::string> launch_params = {"numblocks", "numthreads", "shmem", "stream"};

  int max_args = 32;
  kernels_out << "__global__ void kern(";
  for (int numargs = 0; numargs <= max_args; numargs++) {
    kernels_out << "int arg" << numargs << " = 0";
    if (numargs != max_args) {
      kernels_out << ", ";
    }
  }
  kernels_out << ") {}\n\n";

  for (int numargs = 0; numargs <= max_args; numargs++) {
    for (int p = 2; p <= 4; p++) {
      kernels_out << "template <";
      for (int j = 0; j < p; j++) {
        kernels_out << "int " << launch_params[j];
        if (j != p-1 || numargs > 0) {
          kernels_out << ", ";
        }
      }
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "int arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ">\n";
      kernels_out << "[[clang::matcher(\"kernel_launch " << numargs << " args " << p << " params\")]]\n";
      kernels_out << "auto cuda_kernel_launch_" << numargs << "_" << p << "() {\n";
      kernels_out << "  [[clang::matcher_block]]\n";
      kernels_out << "  {\n";
      kernels_out << "    kern<<<";
      for (int j = 0; j < p; j++) {
        kernels_out << launch_params[j];
        if (j != p-1) {
          kernels_out << ", ";
        }
      }
      kernels_out << ">>>(";
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ");\n";
      kernels_out << "  }\n";
      kernels_out << "}\n";

      kernels_out << "\n";

      kernels_out << "template <";
      for (int j = 0; j < p; j++) {
        kernels_out << "int " << launch_params[j];
        if (j != p-1 || numargs > 0) {
          kernels_out << ", ";
        }
      }
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "int arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ">\n";
      kernels_out << "[[clang::replace(\"kernel_launch " << numargs << " args " << p << " params\")]]\n";
      kernels_out << "auto cuda_kernel_launch_" << numargs << "_" << p << "_replace() {\n";
      kernels_out << "  [[clang::matcher_block]]\n";
      kernels_out << "  {\n";
      kernels_out << "    hipLaunchKernelGGL(kern, ";
      for (int j = 0; j < 4; j++) {
        if (j < p) {
          kernels_out << launch_params[j];
        }
        else {
          kernels_out << "0";
        }
        if (j < 3 || numargs > 0) {
          kernels_out << ", ";
        }
      }
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ");\n";
      kernels_out << "  }\n";
      kernels_out << "}\n";

      kernels_out << "\n";
    }
  }

  kernels_out.close();
}
