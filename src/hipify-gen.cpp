#include "CUDA2HIP.h"

#include "llvm/ADT/StringRef.h"
#include <map>
#include <stdio.h>
#include <string>
#include <iostream>
#include <vector>

// generated by hipify-function-help
std::map<std::string, std::pair<int,int>> name_to_args = {
{"cuArray3DCreate_v2", {2, 2}},
{"cuArray3DGetDescriptor_v2", {2, 2}},
{"cuArrayCreate_v2", {2, 2}},
{"cuArrayDestroy", {1, 1}},
{"cuArrayGetDescriptor_v2", {2, 2}},
{"cuCtxCreate_v2", {3, 3}},
{"cuCtxDestroy_v2", {1, 1}},
{"cuCtxDisablePeerAccess", {1, 1}},
{"cuCtxEnablePeerAccess", {2, 2}},
{"cuCtxGetApiVersion", {2, 2}},
{"cuCtxGetCacheConfig", {1, 1}},
{"cuCtxGetCurrent", {1, 1}},
{"cuCtxGetDevice", {1, 1}},
{"cuCtxGetFlags", {1, 1}},
{"cuCtxGetLimit", {2, 2}},
{"cuCtxGetSharedMemConfig", {1, 1}},
{"cuCtxGetStreamPriorityRange", {2, 2}},
{"cuCtxPopCurrent_v2", {1, 1}},
{"cuCtxPushCurrent_v2", {1, 1}},
{"cuCtxSetCacheConfig", {1, 1}},
{"cuCtxSetCurrent", {1, 1}},
{"cuCtxSetLimit", {2, 2}},
{"cuCtxSetSharedMemConfig", {1, 1}},
{"cuCtxSynchronize", {0, 0}},
{"cuDestroyExternalMemory", {1, 1}},
{"cuDestroyExternalSemaphore", {1, 1}},
{"cuDeviceCanAccessPeer", {3, 3}},
{"cuDeviceGet", {2, 2}},
{"cuDeviceGetAttribute", {3, 3}},
{"cuDeviceGetByPCIBusId", {2, 2}},
{"cuDeviceGetCount", {1, 1}},
{"cuDeviceGetName", {3, 3}},
{"cuDeviceGetP2PAttribute", {4, 4}},
{"cuDeviceGetPCIBusId", {3, 3}},
{"cuDeviceGetUuid", {2, 2}},
{"cuDevicePrimaryCtxGetState", {3, 3}},
{"cuDevicePrimaryCtxRelease", {1, 1}},
{"cuDevicePrimaryCtxReset", {1, 1}},
{"cuDevicePrimaryCtxRetain", {2, 2}},
{"cuDevicePrimaryCtxSetFlags", {2, 2}},
{"cuDeviceTotalMem_v2", {2, 2}},
{"cuDriverGetVersion", {1, 1}},
{"cuEventCreate", {2, 2}},
{"cuEventDestroy_v2", {1, 1}},
{"cuEventElapsedTime", {3, 3}},
{"cuEventQuery", {1, 1}},
{"cuEventRecord", {2, 2}},
{"cuEventSynchronize", {1, 1}},
{"cuExternalMemoryGetMappedBuffer", {3, 3}},
{"cuExternalMemoryGetMappedMipmappedArray", {3, 3}},
{"cuFuncGetAttribute", {3, 3}},
{"cuFuncSetAttribute", {3, 3}},
{"cuFuncSetCacheConfig", {2, 2}},
{"cuFuncSetSharedMemConfig", {2, 2}},
{"cuGetErrorName", {2, 2}},
{"cuGetErrorString", {2, 2}},
{"cuGetExportTable", {2, 2}},
{"cuGraphAddChildGraphNode", {5, 5}},
{"cuGraphAddDependencies", {4, 4}},
{"cuGraphAddEmptyNode", {4, 4}},
{"cuGraphAddHostNode", {5, 5}},
{"cuGraphAddKernelNode", {5, 5}},
{"cuGraphAddMemcpyNode", {6, 6}},
{"cuGraphAddMemsetNode", {6, 6}},
{"cuGraphChildGraphNodeGetGraph", {2, 2}},
{"cuGraphClone", {2, 2}},
{"cuGraphCreate", {2, 2}},
{"cuGraphDestroy", {1, 1}},
{"cuGraphDestroyNode", {1, 1}},
{"cuGraphExecDestroy", {1, 1}},
{"cuGraphExecKernelNodeSetParams", {3, 3}},
{"cuGraphGetEdges", {4, 4}},
{"cuGraphGetNodes", {3, 3}},
{"cuGraphGetRootNodes", {3, 3}},
{"cuGraphHostNodeGetParams", {2, 2}},
{"cuGraphHostNodeSetParams", {2, 2}},
{"cuGraphInstantiate", {5, 5}},
{"cuGraphKernelNodeGetParams", {2, 2}},
{"cuGraphKernelNodeSetParams", {2, 2}},
{"cuGraphLaunch", {2, 2}},
{"cuGraphMemcpyNodeGetParams", {2, 2}},
{"cuGraphMemcpyNodeSetParams", {2, 2}},
{"cuGraphMemsetNodeGetParams", {2, 2}},
{"cuGraphMemsetNodeSetParams", {2, 2}},
{"cuGraphNodeFindInClone", {3, 3}},
{"cuGraphNodeGetDependencies", {3, 3}},
{"cuGraphNodeGetDependentNodes", {3, 3}},
{"cuGraphNodeGetType", {2, 2}},
{"cuGraphRemoveDependencies", {4, 4}},
{"cuGraphicsMapResources", {3, 3}},
{"cuGraphicsResourceGetMappedMipmappedArray", {2, 2}},
{"cuGraphicsResourceGetMappedPointer_v2", {3, 3}},
{"cuGraphicsResourceSetMapFlags_v2", {2, 2}},
{"cuGraphicsSubResourceGetMappedArray", {4, 4}},
{"cuGraphicsUnmapResources", {3, 3}},
{"cuGraphicsUnregisterResource", {1, 1}},
{"cuImportExternalMemory", {2, 2}},
{"cuImportExternalSemaphore", {2, 2}},
{"cuInit", {1, 1}},
{"cuIpcCloseMemHandle", {1, 1}},
{"cuIpcGetEventHandle", {2, 2}},
{"cuIpcGetMemHandle", {2, 2}},
{"cuIpcOpenEventHandle", {2, 2}},
{"cuIpcOpenMemHandle", {3, 3}},
{"cuLaunchCooperativeKernel", {10, 10}},
{"cuLaunchCooperativeKernelMultiDevice", {3, 3}},
{"cuLaunchHostFunc", {3, 3}},
{"cuLaunchKernel", {11, 11}},
{"cuLinkAddData_v2", {8, 8}},
{"cuLinkAddFile_v2", {6, 6}},
{"cuLinkComplete", {3, 3}},
{"cuLinkCreate_v2", {4, 4}},
{"cuLinkDestroy", {1, 1}},
{"cuMemAdvise", {4, 4}},
{"cuMemAllocHost_v2", {2, 2}},
{"cuMemAllocManaged", {3, 3}},
{"cuMemAllocPitch_v2", {5, 5}},
{"cuMemAlloc_v2", {2, 2}},
{"cuMemFreeHost", {1, 1}},
{"cuMemFree_v2", {1, 1}},
{"cuMemGetAddressRange_v2", {3, 3}},
{"cuMemGetInfo_v2", {2, 2}},
{"cuMemHostAlloc", {3, 3}},
{"cuMemHostGetDevicePointer_v2", {3, 3}},
{"cuMemHostGetFlags", {2, 2}},
{"cuMemHostRegister_v2", {3, 3}},
{"cuMemHostUnregister", {1, 1}},
{"cuMemPrefetchAsync", {4, 4}},
{"cuMemRangeGetAttribute", {5, 5}},
{"cuMemRangeGetAttributes", {6, 6}},
{"cuMemcpy", {3, 3}},
{"cuMemcpy2DAsync_v2", {2, 2}},
{"cuMemcpy2DUnaligned_v2", {1, 1}},
{"cuMemcpy2D_v2", {1, 1}},
{"cuMemcpy3DAsync_v2", {2, 2}},
{"cuMemcpy3DPeer", {1, 1}},
{"cuMemcpy3DPeerAsync", {2, 2}},
{"cuMemcpy3D_v2", {1, 1}},
{"cuMemcpyAsync", {4, 4}},
{"cuMemcpyAtoA_v2", {5, 5}},
{"cuMemcpyAtoD_v2", {4, 4}},
{"cuMemcpyAtoHAsync_v2", {5, 5}},
{"cuMemcpyAtoH_v2", {4, 4}},
{"cuMemcpyDtoA_v2", {4, 4}},
{"cuMemcpyDtoDAsync_v2", {4, 4}},
{"cuMemcpyDtoD_v2", {3, 3}},
{"cuMemcpyDtoHAsync_v2", {4, 4}},
{"cuMemcpyDtoH_v2", {3, 3}},
{"cuMemcpyHtoAAsync_v2", {5, 5}},
{"cuMemcpyHtoA_v2", {4, 4}},
{"cuMemcpyHtoDAsync_v2", {4, 4}},
{"cuMemcpyHtoD_v2", {3, 3}},
{"cuMemcpyPeer", {5, 5}},
{"cuMemcpyPeerAsync", {6, 6}},
{"cuMemsetD16Async", {4, 4}},
{"cuMemsetD16_v2", {3, 3}},
{"cuMemsetD2D16Async", {6, 6}},
{"cuMemsetD2D16_v2", {5, 5}},
{"cuMemsetD2D32Async", {6, 6}},
{"cuMemsetD2D32_v2", {5, 5}},
{"cuMemsetD2D8Async", {6, 6}},
{"cuMemsetD2D8_v2", {5, 5}},
{"cuMemsetD32Async", {4, 4}},
{"cuMemsetD32_v2", {3, 3}},
{"cuMemsetD8Async", {4, 4}},
{"cuMemsetD8_v2", {3, 3}},
{"cuMipmappedArrayCreate", {3, 3}},
{"cuMipmappedArrayDestroy", {1, 1}},
{"cuMipmappedArrayGetLevel", {3, 3}},
{"cuModuleGetFunction", {3, 3}},
{"cuModuleGetGlobal_v2", {4, 4}},
{"cuModuleGetSurfRef", {3, 3}},
{"cuModuleGetTexRef", {3, 3}},
{"cuModuleLoad", {2, 2}},
{"cuModuleLoadData", {2, 2}},
{"cuModuleLoadDataEx", {5, 5}},
{"cuModuleLoadFatBinary", {2, 2}},
{"cuModuleUnload", {1, 1}},
{"cuOccupancyMaxActiveBlocksPerMultiprocessor", {4, 4}},
{"cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {5, 5}},
{"cuOccupancyMaxPotentialBlockSize", {6, 6}},
{"cuOccupancyMaxPotentialBlockSizeWithFlags", {7, 7}},
{"cuPointerGetAttribute", {3, 3}},
{"cuPointerGetAttributes", {4, 4}},
{"cuPointerSetAttribute", {3, 3}},
{"cuSignalExternalSemaphoresAsync", {4, 4}},
{"cuStreamAddCallback", {4, 4}},
{"cuStreamAttachMemAsync", {4, 4}},
{"cuStreamBatchMemOp", {4, 4}},
{"cuStreamBeginCapture_v2", {2, 2}},
{"cuStreamCreate", {2, 2}},
{"cuStreamCreateWithPriority", {3, 3}},
{"cuStreamDestroy_v2", {1, 1}},
{"cuStreamEndCapture", {2, 2}},
{"cuStreamGetCaptureInfo", {3, 3}},
{"cuStreamGetCtx", {2, 2}},
{"cuStreamGetFlags", {2, 2}},
{"cuStreamGetPriority", {2, 2}},
{"cuStreamIsCapturing", {2, 2}},
{"cuStreamQuery", {1, 1}},
{"cuStreamSynchronize", {1, 1}},
{"cuStreamWaitEvent", {3, 3}},
{"cuStreamWaitValue32", {4, 4}},
{"cuStreamWaitValue64", {4, 4}},
{"cuStreamWriteValue32", {4, 4}},
{"cuStreamWriteValue64", {4, 4}},
{"cuSurfObjectCreate", {2, 2}},
{"cuSurfObjectDestroy", {1, 1}},
{"cuSurfObjectGetResourceDesc", {2, 2}},
{"cuSurfRefGetArray", {2, 2}},
{"cuSurfRefSetArray", {3, 3}},
{"cuTexObjectCreate", {4, 4}},
{"cuTexObjectDestroy", {1, 1}},
{"cuTexObjectGetResourceDesc", {2, 2}},
{"cuTexObjectGetResourceViewDesc", {2, 2}},
{"cuTexObjectGetTextureDesc", {2, 2}},
{"cuTexRefCreate", {1, 1}},
{"cuTexRefDestroy", {1, 1}},
{"cuTexRefGetAddressMode", {3, 3}},
{"cuTexRefGetAddress_v2", {2, 2}},
{"cuTexRefGetArray", {2, 2}},
{"cuTexRefGetBorderColor", {2, 2}},
{"cuTexRefGetFilterMode", {2, 2}},
{"cuTexRefGetFlags", {2, 2}},
{"cuTexRefGetFormat", {3, 3}},
{"cuTexRefGetMaxAnisotropy", {2, 2}},
{"cuTexRefGetMipmapFilterMode", {2, 2}},
{"cuTexRefGetMipmapLevelBias", {2, 2}},
{"cuTexRefGetMipmapLevelClamp", {3, 3}},
{"cuTexRefGetMipmappedArray", {2, 2}},
{"cuTexRefSetAddress2D_v3", {4, 4}},
{"cuTexRefSetAddressMode", {3, 3}},
{"cuTexRefSetAddress_v2", {4, 4}},
{"cuTexRefSetArray", {3, 3}},
{"cuTexRefSetBorderColor", {2, 2}},
{"cuTexRefSetFilterMode", {2, 2}},
{"cuTexRefSetFlags", {2, 2}},
{"cuTexRefSetFormat", {3, 3}},
{"cuTexRefSetMaxAnisotropy", {2, 2}},
{"cuTexRefSetMipmapFilterMode", {2, 2}},
{"cuTexRefSetMipmapLevelBias", {2, 2}},
{"cuTexRefSetMipmapLevelClamp", {3, 3}},
{"cuTexRefSetMipmappedArray", {3, 3}},
{"cuThreadExchangeStreamCaptureMode", {1, 1}},
{"cuWaitExternalSemaphoresAsync", {4, 4}},
{"cudaArrayGetInfo", {4, 4}},
{"cudaBindSurfaceToArray", {3, 3}},
{"cudaBindTexture", {4, 5}},
{"cudaBindTexture2D", {7, 7}},
{"cudaBindTextureToArray", {3, 3}},
{"cudaBindTextureToMipmappedArray", {3, 3}},
{"cudaChooseDevice", {2, 2}},
{"cudaCreateChannelDesc", {5, 5}},
{"cudaCreateSurfaceObject", {2, 2}},
{"cudaCreateTextureObject", {4, 4}},
{"cudaDestroyExternalMemory", {1, 1}},
{"cudaDestroyExternalSemaphore", {1, 1}},
{"cudaDestroySurfaceObject", {1, 1}},
{"cudaDestroyTextureObject", {1, 1}},
{"cudaDeviceCanAccessPeer", {3, 3}},
{"cudaDeviceDisablePeerAccess", {1, 1}},
{"cudaDeviceEnablePeerAccess", {2, 2}},
{"cudaDeviceGetAttribute", {3, 3}},
{"cudaDeviceGetByPCIBusId", {2, 2}},
{"cudaDeviceGetCacheConfig", {1, 1}},
{"cudaDeviceGetLimit", {2, 2}},
{"cudaDeviceGetP2PAttribute", {4, 4}},
{"cudaDeviceGetPCIBusId", {3, 3}},
{"cudaDeviceGetSharedMemConfig", {1, 1}},
{"cudaDeviceGetStreamPriorityRange", {2, 2}},
{"cudaDeviceReset", {0, 0}},
{"cudaDeviceSetCacheConfig", {1, 1}},
{"cudaDeviceSetLimit", {2, 2}},
{"cudaDeviceSetSharedMemConfig", {1, 1}},
{"cudaDeviceSynchronize", {0, 0}},
{"cudaDriverGetVersion", {1, 1}},
{"cudaEventCreate", {1, 2}},
{"cudaEventCreateWithFlags", {2, 2}},
{"cudaEventDestroy", {1, 1}},
{"cudaEventElapsedTime", {3, 3}},
{"cudaEventQuery", {1, 1}},
{"cudaEventRecord", {1, 2}},
{"cudaEventSynchronize", {1, 1}},
{"cudaExternalMemoryGetMappedBuffer", {3, 3}},
{"cudaExternalMemoryGetMappedMipmappedArray", {3, 3}},
{"cudaFree", {1, 1}},
{"cudaFreeArray", {1, 1}},
{"cudaFreeHost", {1, 1}},
{"cudaFreeMipmappedArray", {1, 1}},
{"cudaFuncGetAttributes", {2, 2}},
{"cudaFuncSetAttribute", {3, 3}},
{"cudaFuncSetCacheConfig", {2, 2}},
{"cudaFuncSetSharedMemConfig", {2, 2}},
{"cudaGLGetDevices", {4, 4}},
{"cudaGLMapBufferObject", {2, 2}},
{"cudaGLMapBufferObjectAsync", {3, 3}},
{"cudaGLRegisterBufferObject", {1, 1}},
{"cudaGLSetBufferObjectMapFlags", {2, 2}},
{"cudaGLSetGLDevice", {1, 1}},
{"cudaGLUnmapBufferObject", {1, 1}},
{"cudaGLUnmapBufferObjectAsync", {2, 2}},
{"cudaGLUnregisterBufferObject", {1, 1}},
{"cudaGetChannelDesc", {2, 2}},
{"cudaGetDevice", {1, 1}},
{"cudaGetDeviceCount", {1, 1}},
{"cudaGetDeviceFlags", {1, 1}},
{"cudaGetDeviceProperties", {2, 2}},
{"cudaGetErrorName", {1, 1}},
{"cudaGetErrorString", {1, 1}},
{"cudaGetExportTable", {2, 2}},
{"cudaGetLastError", {0, 0}},
{"cudaGetMipmappedArrayLevel", {3, 3}},
{"cudaGetSurfaceObjectResourceDesc", {2, 2}},
{"cudaGetSurfaceReference", {2, 2}},
{"cudaGetSymbolAddress", {2, 2}},
{"cudaGetSymbolSize", {2, 2}},
{"cudaGetTextureAlignmentOffset", {2, 2}},
{"cudaGetTextureObjectResourceDesc", {2, 2}},
{"cudaGetTextureObjectResourceViewDesc", {2, 2}},
{"cudaGetTextureObjectTextureDesc", {2, 2}},
{"cudaGetTextureReference", {2, 2}},
{"cudaGraphAddChildGraphNode", {5, 5}},
{"cudaGraphAddDependencies", {4, 4}},
{"cudaGraphAddEmptyNode", {4, 4}},
{"cudaGraphAddHostNode", {5, 5}},
{"cudaGraphAddKernelNode", {5, 5}},
{"cudaGraphAddMemcpyNode", {5, 5}},
{"cudaGraphAddMemsetNode", {5, 5}},
{"cudaGraphChildGraphNodeGetGraph", {2, 2}},
{"cudaGraphClone", {2, 2}},
{"cudaGraphCreate", {2, 2}},
{"cudaGraphDestroy", {1, 1}},
{"cudaGraphDestroyNode", {1, 1}},
{"cudaGraphExecDestroy", {1, 1}},
{"cudaGraphExecKernelNodeSetParams", {3, 3}},
{"cudaGraphGetEdges", {4, 4}},
{"cudaGraphGetNodes", {3, 3}},
{"cudaGraphGetRootNodes", {3, 3}},
{"cudaGraphHostNodeGetParams", {2, 2}},
{"cudaGraphHostNodeSetParams", {2, 2}},
{"cudaGraphInstantiate", {5, 5}},
{"cudaGraphKernelNodeGetParams", {2, 2}},
{"cudaGraphKernelNodeSetParams", {2, 2}},
{"cudaGraphLaunch", {2, 2}},
{"cudaGraphMemcpyNodeGetParams", {2, 2}},
{"cudaGraphMemcpyNodeSetParams", {2, 2}},
{"cudaGraphMemsetNodeGetParams", {2, 2}},
{"cudaGraphMemsetNodeSetParams", {2, 2}},
{"cudaGraphNodeFindInClone", {3, 3}},
{"cudaGraphNodeGetDependencies", {3, 3}},
{"cudaGraphNodeGetDependentNodes", {3, 3}},
{"cudaGraphNodeGetType", {2, 2}},
{"cudaGraphRemoveDependencies", {4, 4}},
{"cudaGraphicsGLRegisterBuffer", {3, 3}},
{"cudaGraphicsGLRegisterImage", {4, 4}},
{"cudaGraphicsMapResources", {2, 3}},
{"cudaGraphicsResourceGetMappedMipmappedArray", {2, 2}},
{"cudaGraphicsResourceGetMappedPointer", {3, 3}},
{"cudaGraphicsResourceSetMapFlags", {2, 2}},
{"cudaGraphicsSubResourceGetMappedArray", {4, 4}},
{"cudaGraphicsUnmapResources", {2, 3}},
{"cudaGraphicsUnregisterResource", {1, 1}},
{"cudaHostAlloc", {3, 3}},
{"cudaHostGetDevicePointer", {3, 3}},
{"cudaHostGetFlags", {2, 2}},
{"cudaHostRegister", {3, 3}},
{"cudaHostUnregister", {1, 1}},
{"cudaImportExternalMemory", {2, 2}},
{"cudaImportExternalSemaphore", {2, 2}},
{"cudaIpcCloseMemHandle", {1, 1}},
{"cudaIpcGetEventHandle", {2, 2}},
{"cudaIpcGetMemHandle", {2, 2}},
{"cudaIpcOpenEventHandle", {2, 2}},
{"cudaIpcOpenMemHandle", {3, 3}},
{"cudaLaunchCooperativeKernel", {4, 6}},
{"cudaLaunchCooperativeKernelMultiDevice", {2, 3}},
{"cudaLaunchHostFunc", {3, 3}},
{"cudaLaunchKernel", {4, 6}},
{"cudaMalloc", {2, 2}},
{"cudaMalloc3D", {2, 2}},
{"cudaMalloc3DArray", {3, 4}},
{"cudaMallocArray", {3, 5}},
{"cudaMallocHost", {2, 3}},
{"cudaMallocManaged", {2, 3}},
{"cudaMallocMipmappedArray", {4, 5}},
{"cudaMallocPitch", {4, 4}},
{"cudaMemAdvise", {4, 4}},
{"cudaMemGetInfo", {2, 2}},
{"cudaMemPrefetchAsync", {3, 4}},
{"cudaMemRangeGetAttribute", {5, 5}},
{"cudaMemRangeGetAttributes", {6, 6}},
{"cudaMemcpy", {4, 4}},
{"cudaMemcpy2D", {7, 7}},
{"cudaMemcpy2DArrayToArray", {8, 9}},
{"cudaMemcpy2DAsync", {7, 8}},
{"cudaMemcpy2DFromArray", {8, 8}},
{"cudaMemcpy2DFromArrayAsync", {8, 9}},
{"cudaMemcpy2DToArray", {8, 8}},
{"cudaMemcpy2DToArrayAsync", {8, 9}},
{"cudaMemcpy3D", {1, 1}},
{"cudaMemcpy3DAsync", {1, 2}},
{"cudaMemcpy3DPeer", {1, 1}},
{"cudaMemcpy3DPeerAsync", {1, 2}},
{"cudaMemcpyArrayToArray", {7, 8}},
{"cudaMemcpyAsync", {4, 5}},
{"cudaMemcpyFromArray", {6, 6}},
{"cudaMemcpyFromArrayAsync", {6, 7}},
{"cudaMemcpyFromSymbol", {3, 5}},
{"cudaMemcpyFromSymbolAsync", {5, 6}},
{"cudaMemcpyPeer", {5, 5}},
{"cudaMemcpyPeerAsync", {5, 6}},
{"cudaMemcpyToArray", {6, 6}},
{"cudaMemcpyToArrayAsync", {6, 7}},
{"cudaMemcpyToSymbol", {3, 5}},
{"cudaMemcpyToSymbolAsync", {5, 6}},
{"cudaMemset", {3, 3}},
{"cudaMemset2D", {5, 5}},
{"cudaMemset2DAsync", {5, 6}},
{"cudaMemset3D", {3, 3}},
{"cudaMemset3DAsync", {3, 4}},
{"cudaMemsetAsync", {3, 4}},
{"cudaOccupancyMaxActiveBlocksPerMultiprocessor", {4, 4}},
{"cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {5, 5}},
{"cudaPeekAtLastError", {0, 0}},
{"cudaPointerGetAttributes", {2, 2}},
{"cudaRuntimeGetVersion", {1, 1}},
{"cudaSetDevice", {1, 1}},
{"cudaSetDeviceFlags", {1, 1}},
{"cudaSetDoubleForDevice", {1, 1}},
{"cudaSetDoubleForHost", {1, 1}},
{"cudaSetValidDevices", {2, 2}},
{"cudaSignalExternalSemaphoresAsync", {3, 4}},
{"cudaStreamAddCallback", {4, 4}},
{"cudaStreamAttachMemAsync", {2, 4}},
{"cudaStreamBeginCapture", {2, 2}},
{"cudaStreamCreate", {1, 1}},
{"cudaStreamCreateWithFlags", {2, 2}},
{"cudaStreamCreateWithPriority", {3, 3}},
{"cudaStreamDestroy", {1, 1}},
{"cudaStreamEndCapture", {2, 2}},
{"cudaStreamGetCaptureInfo", {3, 3}},
{"cudaStreamGetFlags", {2, 2}},
{"cudaStreamGetPriority", {2, 2}},
{"cudaStreamIsCapturing", {2, 2}},
{"cudaStreamQuery", {1, 1}},
{"cudaStreamSynchronize", {1, 1}},
{"cudaStreamWaitEvent", {3, 3}},
{"cudaThreadExchangeStreamCaptureMode", {1, 1}},
{"cudaThreadExit", {0, 0}},
{"cudaThreadGetCacheConfig", {1, 1}},
{"cudaThreadGetLimit", {2, 2}},
{"cudaThreadSetCacheConfig", {1, 1}},
{"cudaThreadSetLimit", {2, 2}},
{"cudaThreadSynchronize", {0, 0}},
{"cudaUnbindTexture", {1, 1}},
{"cudaWaitExternalSemaphoresAsync", {3, 4}},
{"make_cudaExtent", {3, 3}},
{"make_cudaPitchedPtr", {4, 4}},
{"make_cudaPos", {3, 3}},
// added by hand:
{"cudaGraphAddMemcpyNode1D", {8, 8}},
{"cudaOccupancyMaxPotentialBlockSize", {3, 5}},
{"cudaOccupancyMaxPotentialBlockSizeWithFlags", {3, 6}},
};

int main() {
  std::fstream literals_out("cuda_literals.cpp", std::ios::out);

  literals_out << "std::vector<std::string> clang_rewrite_literal_names = {\n";

  std::fstream runtime_types_out("runtime_type_names.cpp", std::ios::out);

  for (std::pair<llvm::StringRef, hipCounter> type_map : CUDA_RUNTIME_TYPE_NAME_MAP) {
    if (type_map.second.supportDegree == FULL) {
      std::string cuda_name = type_map.first.str();
      std::string hip_name = type_map.second.hipName.str();

      literals_out << "\"" << cuda_name << "\",\n";

      runtime_types_out << "[[clang::matcher(\"" << cuda_name << " type\")]]\n";
      runtime_types_out << "auto " << cuda_name << "_type() {\n";
      runtime_types_out << "  [[clang::matcher_block]]\n";
      runtime_types_out << "  {\n";
      runtime_types_out << "    " << cuda_name << " varname;\n";
      runtime_types_out << "  }\n";
      runtime_types_out << "}\n";

      runtime_types_out << "\n";

      runtime_types_out << "[[clang::replace(\"" << cuda_name << " type\")]]\n";
      runtime_types_out << "auto " << cuda_name << "_replace() {\n";
      runtime_types_out << "  [[clang::matcher_block]]\n";
      runtime_types_out << "  {\n";
      runtime_types_out << "    " << hip_name << " varname;\n";
      runtime_types_out << "  }\n";
      runtime_types_out << "}\n";

      runtime_types_out << "\n";
    }
  }

  runtime_types_out.close();

  std::fstream runtime_funcs_out("runtime_function_names.cpp", std::ios::out);

  for (std::pair<llvm::StringRef, hipCounter> func_map : CUDA_RUNTIME_FUNCTION_MAP) {
    if (func_map.second.supportDegree == FULL) {
      std::string cuda_name = func_map.first.str();
      std::string hip_name = func_map.second.hipName.str();

      literals_out << "\"" << cuda_name << "\",\n";

      int min_params = 0;
      int num_params = 0;
      if (name_to_args.find(cuda_name) == name_to_args.end()) {
        runtime_funcs_out << "/* TODO: FIX ME */\n";
      }
      else {
        min_params = name_to_args[cuda_name].first;
        num_params = name_to_args[cuda_name].second;
      }

      for (int i = min_params; i <= num_params; i++) {
        int j;
        runtime_funcs_out << "[[clang::matcher(\"" << cuda_name << " " << i << " func\")]]\n";
        runtime_funcs_out << "auto " << cuda_name << i << "_func() {\n";
        for (j = 1; j <= i; j++) {
          runtime_funcs_out << "  auto arg" << j << ";\n";
        }
        runtime_funcs_out << "  [[clang::matcher_block]]\n";
        runtime_funcs_out << "  {\n";
        runtime_funcs_out << "    " << cuda_name << "(";
        for (j = 1; j <= i; j++) {
          runtime_funcs_out << "arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ");\n";
        runtime_funcs_out << "  }\n";
        runtime_funcs_out << "}\n";

        runtime_funcs_out << "\n";

        runtime_funcs_out << "[[clang::replace(\"" << cuda_name << " " << i << " func\")]]\n";
        runtime_funcs_out << "auto " << cuda_name << i << "_replace() {\n";
        for (j = 1; j <= i; j++) {
          runtime_funcs_out << "  auto arg" << j << ";\n";
        }
        runtime_funcs_out << "  [[clang::matcher_block]]\n";
        runtime_funcs_out << "  {\n";
        runtime_funcs_out << "    " << hip_name << "(";
        for (j = 1; j <= i; j++) {
          runtime_funcs_out << "arg" << j;
          if (j != i) {
            runtime_funcs_out << ", ";
          }
        }
        runtime_funcs_out << ");\n";
        runtime_funcs_out << "  }\n";
        runtime_funcs_out << "}\n";

        runtime_funcs_out << "\n";
      }

    }
  }

  literals_out << "};\n";

  literals_out.close();

  runtime_funcs_out.close();

  std::fstream kernels_out("kernel_launches.cpp", std::ios::out);

  std::vector<std::string> launch_params = {"numblocks", "numthreads", "shmem", "stream"};

  for (int numargs = 0; numargs <= 32; numargs++) {
    for (int p = 2; p <= 4; p++) {
      kernels_out << "[[clang::matcher(\"kernel_launch " << numargs << " args " << p << " params\")]]\n";
      kernels_out << "auto cuda_kernel_launch_" << numargs << "_" << p << "() {\n";
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "  auto arg" << j << ";\n";
      }
      kernels_out << "  [[clang::matcher_block]]\n";
      kernels_out << "  {\n";
      kernels_out << "    kern<<<";
      for (int j = 0; j < p; j++) {
        kernels_out << launch_params[j];
        if (j != p-1) {
          kernels_out << ", ";
        }
      }
      kernels_out << ">>>(";
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ");\n";
      kernels_out << "  }\n";
      kernels_out << "}\n";

      kernels_out << "\n";

      kernels_out << "[[clang::replace(\"kernel_launch " << numargs << " args " << p << " params\")]]\n";
      kernels_out << "auto cuda_kernel_launch_" << numargs << "_" << p << "() {\n";
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "  auto arg" << j << ";\n";
      }
      kernels_out << "  [[clang::matcher_block]]\n";
      kernels_out << "  {\n";
      kernels_out << "    hipLaunchKernelGGL(kern, ";
      for (int j = 0; j < 4; j++) {
        if (j < p) {
          kernels_out << launch_params[j] << ", ";
        }
        else {
          kernels_out << "0, ";
        }
      }
      for (int j = 1; j <= numargs; j++) {
        kernels_out << "arg" << j;
        if (j != numargs) {
          kernels_out << ", ";
        }
      }
      kernels_out << ");\n";
      kernels_out << "  }\n";
      kernels_out << "}\n";

      kernels_out << "\n";
    }
  }

  kernels_out.close();
}
